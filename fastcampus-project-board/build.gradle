plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
}

group = 'com.fastcampus'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}



dependencies {
    /*spring boot*/
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    //Configuration processor tymeleaf3 decoupledlogic 추가
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    /*Thymeleaf*/
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    //QueryDSL 설정
    implementation "com.querydsl:querydsl-jpa" //버전 spring dependecy 자동관리 생략
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    //위의 jpa core collections와 같은 프레임워크 버전으로 잡힌다.
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" //오류해결책코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"  //오류해결책코드
}
/*Junit Test*/
tasks.named('test') {
    useJUnitPlatform()
}

//querydsl Qclass
def generated   = 'src/main/generated'

// querydsl Qclass 파일 생성 위치 변경
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
// 추가된거 source set 개수 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}
// graidle clean시에 Quclass 딜렉토리 삭제
clean {
    delete file(generated)
}


